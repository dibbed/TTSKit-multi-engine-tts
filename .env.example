# TTSKit Configuration
# Copy this file to .env and fill in your values
#
# QUICK START GUIDE:
# 1. Copy this file: cp .env.example .env
# 2. Edit .env and set your BOT_TOKEN
# 3. Run setup: ttskit setup
# 4. Start bot: ttskit start --token YOUR_BOT_TOKEN
#
# MINIMAL CONFIGURATION (just change these):
# BOT_TOKEN=your_bot_token_here
# DEFAULT_LANG=en
# TTS_DEFAULT=edge

# =============================================================================
# TELEGRAM BOT CONFIGURATION
# =============================================================================

# Telegram Bot Token from @BotFather (REQUIRED)
BOT_TOKEN=your_bot_token_here

# Telegram API credentials (required for Pyrogram/Telethon only)
TELEGRAM_API_ID=your_telegram_api_id
TELEGRAM_API_HASH=your_telegram_api_hash

# Telegram framework driver: aiogram, pyrogram, telethon, telebot
TELEGRAM_DRIVER=aiogram

# Sudo/admin users (comma-separated Telegram user IDs)
SUDO_USERS=

# =============================================================================
# TTS CONFIGURATION
# =============================================================================

# Default language if not specified (en, fa, ar, etc.)
DEFAULT_LANG=en

# Maximum characters per request (1-10000)
MAX_CHARS=1000

# Maximum text length per request (1-10000)
MAX_TEXT_LENGTH=1000

# Default TTS engine: gtts, edge, piper, or auto
TTS_DEFAULT=edge

# Enable engine fallback (true/false)
FALLBACK_ENABLED=true

# Per-language engine policies (comma-separated engine names)
TTS_POLICY_FA=edge,piper,gtts
TTS_POLICY_EN=edge,gtts,piper
TTS_POLICY_AR=edge,gtts,piper

# =============================================================================
# ENGINE-SPECIFIC CONFIGURATION
# =============================================================================

# Edge TTS voices for different languages
EDGE_VOICE_EN=en-US-JennyNeural
EDGE_VOICE_FA=fa-IR-DilaraNeural
EDGE_VOICE_AR=ar-SA-HamedNeural

# Piper TTS Configuration
PIPER_MODEL_PATH=./models/piper/
PIPER_USE_CUDA=false
PIPER_USE_MPS=false

# Enable Piper TTS (true/false)
PIPER_ENABLED=true

# Piper Setup Guide:
# 1. Install Piper: pip install piper-tts
# 2. Download models: python -m piper.download_voices fa_IR-amir-medium --data-dir ./models/piper
# 3. Set PIPER_MODEL_PATH=./models/piper/
# 4. Enable PIPER_ENABLED=true

# =============================================================================
# AUDIO CONFIGURATION
# =============================================================================

# Default audio format
DEFAULT_FORMAT=ogg

# Default audio bitrate (format: 48k, 64k, etc.)
DEFAULT_BITRATE=48k

# Default sample rate in Hz (8000-192000)
DEFAULT_SAMPLE_RATE=48000

# Audio bitrate (format: 48k, 64k, etc.)
AUDIO_BITRATE=48k

# Sample rate in Hz (8000-192000)
AUDIO_SAMPLE_RATE=48000

# Audio channels (1=mono, 2=stereo)
AUDIO_CHANNELS=1

# Prefix for temporary directories
TEMP_DIR_PREFIX=ttskit_

# Session and data paths
SESSION_PATH=./data/sessions/
DATA_PATH=./data/

# =============================================================================
# API SECURITY CONFIGURATION
# =============================================================================

# Single API key for authentication (legacy - takes priority over database)
API_KEY=demo-key

# Multiple API keys (JSON format: {"user_id": "api_key"})
# Priority: Config keys > Database keys
# Special users: "admin" gets admin permissions, "readonly_*" gets read-only
API_KEYS={"demo-user": "demo-key", "admin": "admin-secret"}

# Enable API authentication (true/false)
ENABLE_AUTH=false

# API rate limit per minute (1-10000)
API_RATE_LIMIT=100

# CORS allowed origins (JSON array)
CORS_ORIGINS=["*"]

# Allowed hosts for security (JSON array)
ALLOWED_HOSTS=["*"]

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================

# Enable audio caching (true/false)
CACHE_ENABLED=true

# Enable caching (alias for CACHE_ENABLED)
ENABLE_CACHING=true

# Cache TTL in seconds (60-86400)
CACHE_TTL=3600

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================

# Enable rate limiting (true/false)
ENABLE_RATE_LIMITING=true

# Max requests per minute per user (1-100)
RATE_LIMIT_RPM=10

# Rate limit window in seconds (10-3600)
RATE_LIMIT_WINDOW=60

# Rate limit block duration (in seconds)
RATE_LIMIT_BLOCK_DURATION=300

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database URL (overrides DATABASE_PATH if set)
# Examples: sqlite:///ttskit.db, postgresql://user:pass@localhost/ttskit
DATABASE_URL=

# SQLite database file path (used if DATABASE_URL not set)
DATABASE_PATH=./data/ttskit.db

# Enable SQLAlchemy query logging (true/false)
DATABASE_ECHO=false

# Database connection pool size (1-20)
DATABASE_POOL_SIZE=5

# Database max overflow connections (0-50)
DATABASE_MAX_OVERFLOW=10

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis URL for caching/rate limiting (if enabled)
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# API CONFIGURATION
# =============================================================================

# Use REST API for synthesis (true/false)
USE_API=false

# Base URL of external TTS API (when USE_API=true)
API_BASE_URL=

# API host
API_HOST=127.0.0.1

# API port
API_PORT=8080

# API timeout (in seconds)
API_TIMEOUT=15.0

# =============================================================================
# HEALTH CHECK CONFIGURATION
# =============================================================================

# Health check interval (in seconds)
HEALTH_CHECK_INTERVAL=300

# Health check timeout (in seconds)
HEALTH_CHECK_TIMEOUT=30

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# VERSION INFO
# =============================================================================

# Application version
VERSION=1.0.0

# =============================================================================
# API KEY PRIORITY SYSTEM
# =============================================================================

# Priority Order:
# 1. Config API_KEYS (from env) - Highest priority
# 2. Config API_KEY (single key) - Second priority
# 3. Database keys (hash-based) - Lowest priority
#
# Special Users:
# - "admin" → gets ["read", "write", "admin"] permissions
# - "readonly_*" → gets ["read"] permissions
# - Others → get ["read", "write"] permissions

# =============================================================================
# EXAMPLES
# =============================================================================

# Example 1: Basic Bot Setup (Recommended for beginners)
# BOT_TOKEN=123456789:ABCdefGHIjklMNOpqrsTUVwxyz
# DEFAULT_LANG=en
# TTS_DEFAULT=edge
# CACHE_ENABLED=true
# ENABLE_RATE_LIMITING=true
# ENABLE_AUTH=false

# Example 2: Advanced Bot with Multiple Engines
# BOT_TOKEN=123456789:ABCdefGHIjklMNOpqrsTUVwxyz
# DEFAULT_LANG=en
# TTS_DEFAULT=edge
# TTS_POLICY_EN=edge,gtts
# TTS_POLICY_FA=edge,piper
# TTS_POLICY_AR=edge,gtts
# CACHE_ENABLED=true
# ENABLE_RATE_LIMITING=true

# Example 3: API Server Setup
# API_KEYS={"admin": "admin-secret", "user1": "user1-key", "user2": "user2-key"}
# ENABLE_AUTH=true
# API_RATE_LIMIT=100
# API_HOST=0.0.0.0
# API_PORT=8000
# CACHE_ENABLED=true
# REDIS_URL=redis://localhost:6379/0
# DATABASE_PATH=./data/ttskit.db
# DATABASE_ECHO=false

# Example 4: Production Setup with Redis
# BOT_TOKEN=123456789:ABCdefGHIjklMNOpqrsTUVwxyz
# DEFAULT_LANG=en
# TTS_DEFAULT=edge
# TTS_POLICY_EN=edge,gtts
# TTS_POLICY_FA=edge,gtts
# TTS_POLICY_AR=edge,gtts
# CACHE_ENABLED=true
# REDIS_URL=redis://localhost:6379/0
# ENABLE_RATE_LIMITING=true
# RATE_LIMIT_RPM=10
# USE_API=true
# API_HOST=0.0.0.0
# API_PORT=8000
# API_KEYS={"admin": "admin-secret", "api-user": "api-user-key"}
# ENABLE_AUTH=true
