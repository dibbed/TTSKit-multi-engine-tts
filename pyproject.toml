[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ttskit"
version = "1.0.0"
description = "Multi-Engine TTS Bot & Library with Smart Routing, Audio Processing, and Multi-Framework Support"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "dibbed", email = "ali0.0kh1380@gmail.com"},
]
maintainers = [
    {name = "dibbed", email = "ali0.0kh1380@gmail.com"},
]
keywords = ["telegram", "tts", "aiogram", "gtts", "edge-tts", "piper", "opus", "persian", "fa", "multi-engine", "smart-routing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Communications :: Chat",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    # Core TTS engines
    "gTTS>=2.5",
    "edge-tts>=6.1",

    # Audio processing
    "pydub>=0.25",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "numpy>=1.24.0",

    # Piper runtime (moved from optional to core)
    "onnx>=1.14.0",
    "onnxruntime>=1.15.0",

    # Telegram frameworks
    "aiogram>=3.0",
    "pyrogram>=2.0",
    "telethon>=1.30",
    "pyTelegramBotAPI>=4.0",

    # Configuration and validation
    "pydantic>=2.0",
    "pydantic-settings>=2.3",
    "python-dotenv>=1.0",

    # CLI and API
    "typer>=0.12",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",

    # Caching and storage
    "redis>=4.0.0",

    # Utilities
    "requests>=2.28.0",
    "aiofiles>=23.0.0",
    "asyncio-mqtt>=0.13.0",
]

[project.optional-dependencies]

# Audio processing
audio = ["librosa>=0.10.0", "soundfile>=0.12.0", "numpy>=1.24.0"]

# Caching
redis = ["redis>=4.0.0"]

# Monitoring and metrics
monitoring = ["psutil>=5.8.0", "prometheus-client>=0.17.0"]

# Development
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.6.0",
    "mypy>=1.10.0",
    "types-requests",
    "types-redis",
    "types-aiofiles",
]

# All optional dependencies (excluding TTS due to installation issues)
all = [
    "onnx>=1.14.0",
    "onnxruntime>=1.15.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "numpy>=1.24.0",
    "redis>=4.0.0",
    "psutil>=5.8.0",
    "prometheus-client>=0.17.0",
]

# TTS package (separate optional dependency due to installation issues)
tts = [
    "TTS>=0.22.0",
]

[project.scripts]
ttskit = "ttskit_cli.main:app"
ttskit-bot = "ttskit_cli.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["ttskit*", "ttskit_cli*"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "S",  # flake8-bandit
    "T20", # flake8-print
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "S101", # assert used
    "T201", # print found
    "E402", # module level import not at top of file (for examples)
    "S105", # possible hardcoded password (for tests)
    "S106", # possible hardcoded password (for tests)
    "S108", # probable insecure usage of temporary file (for tests)
    "S110", # try-except-pass detected (for error handling)
    "S112", # try-except-continue detected (for error handling)
    "S603", # subprocess call (for system commands)
    "S104", # possible binding to all interfaces (for API)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "S101", "S105", "S106", "S108", "B017"]  # assert false, assert used, test tokens, temp files, broad exceptions
"examples/**/*" = ["T201", "E402"]  # print found, import after path setup
"ttskit_cli/**/*" = ["S603", "S104"]  # subprocess calls, binding to all interfaces

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
disallow_any_generics = true
disallow_subclassing_any = true

[[tool.mypy.overrides]]
module = [
    "gtts.*",
    "pydub.*",
    "aiogram.*",
    "edge_tts.*",
    "pyrogram.*",
    "telethon.*",
    "telebot.*",
    "librosa.*",
    "soundfile.*",
    "numpy.*",
    "onnx.*",
    "onnxruntime.*",
    "TTS.*",
    "redis.*",
    "psutil.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--maxfail=5",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]
asyncio_mode = "auto"
